<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heleeos.blog.dao.mapper.AuthRouteMapper">
  <resultMap id="BaseResultMap" type="com.heleeos.blog.dao.domain.AuthRoute">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auth_name" jdbcType="VARCHAR" property="authName" />
    <result column="auth_path" jdbcType="VARCHAR" property="authPath" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, auth_name, auth_path, auth_type, create_time, update_time
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_auth_route where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByDomain" parameterType="com.heleeos.blog.dao.domain.AuthRoute" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_auth_route
    <where>
      <if test="id != null">
        and id = id
      </if>
      <if test="authName != null">
        and auth_name = authName
      </if>
      <if test="authPath != null">
        and auth_path = authPath
      </if>
      <if test="authType != null">
        and auth_type = authType
      </if>
      <if test="createTime != null">
        and create_time = createTime
      </if>
      <if test="updateTime != null">
        and update_time = updateTime
      </if>
    </where>
  </select>
  <select id="countByDomain" resultType="int">
    select count(0) from t_auth_route
    <where>
      <if test="id != null">
        and id = id
      </if>
      <if test="authName != null">
        and auth_name = authName
      </if>
      <if test="authPath != null">
        and auth_path = authPath
      </if>
      <if test="authType != null">
        and auth_type = authType
      </if>
      <if test="createTime != null">
        and create_time = createTime
      </if>
      <if test="updateTime != null">
        and update_time = updateTime
      </if>
    </where>
  </select>
  <insert id="insert" parameterType="com.heleeos.blog.dao.domain.AuthRoute">
    insert into t_auth_route
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authName != null">
        auth_name,
      </if>
      <if test="authPath != null">
        auth_path,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authPath != null">
        #{authPath,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.heleeos.blog.dao.domain.AuthRoute">
    update t_auth_route
    <set>
      <if test="authName != null">
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authPath != null">
        auth_path = #{authPath,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="delete">
    delete from t_auth_route where id = #{id,jdbcType=INTEGER}
  </delete>
</mapper>